import taichi as ti

ti.init(arch=ti.cpu)

vec0f = ti.types.vector( 0, ti.f32 )
x0 = vec0f( 0.0 )
print( "type(x0) =", type(x0) )
print( "x0.__dict__ =", x0.__dict__ )
print( "x0      =", x0 )
print( "x0.ndim =", x0.ndim )
print( "x0.n    =", x0.n )
print( "x0.m    =", x0.m )
print( )
print( )

vec1f = ti.types.vector( 1, ti.f32 )
x1 = vec1f( 0.0 )
print( "type(x1) =", type(x1) )
print( "x1.__dict__ =", x1.__dict__ )
print( "x1      =", x1 )
print( "x1.ndim =", x1.ndim )
print( "x1.n    =", x1.n )
print( "x1.m    =", x1.m )
print( )
print( )

vec2f = ti.types.vector( 2, ti.f32 )
x2 = vec2f( 0.0 )
print( "type(x2) =", type(x2) )
print( "x2.__dict__ =", x2.__dict__ )
print( "x2      =", x2 )
print( "x2.ndim =", x2.ndim )
print( "x2.n    =", x2.n )
print( "x2.m    =", x2.m )
print( )
print( )

vec3f = ti.types.vector( 3, ti.f32 )
x3 = vec3f( 0.0 )
print( "type(x3) =", type(x3) )
print( "x3.__dict__ =", x3.__dict__ )
print( "x3      =", x3 )
print( "x3.ndim =", x3.ndim )
print( "x3.n    =", x3.n )
print( "x3.m    =", x3.m )
print( )
print( )
